using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using WrathCombo.Combos.PvE;
using WrathCombo.Combos.PvP;
using WrathCombo.Extensions;

namespace WrathCombo.Resources.Dictionary.Chinese.Description
{
    public static class DOLSkills
    {
        public static IEnumerable<KeyValuePair<string, string>> GetSkills()
        {
            return
            [
                // Generated by the String Extraction and Translation Tool  
                // Model: DeepSeek v3  
                // Temperature: 0.1  
                // Generation Time: 2025-03-13 18:45:21  
                #region BTN & MIN
                KeyValuePair.Create("Wise to the World", DOL.MinWiseToTheWorld.ActionName()),
                KeyValuePair.Create("Prospect", DOL.Prospect.ActionName()),
                KeyValuePair.Create("Lay of the Land", DOL.LayOfTheLand.ActionName()),
                KeyValuePair.Create("Lay of the Land 2", DOL.LayOfTheLand2.ActionName()),
                KeyValuePair.Create("Truth of Mountains", DOL.TruthOfMountains.ActionName()),
                KeyValuePair.Create("Arbor Call", DOL.ArborCall.ActionName()),
                KeyValuePair.Create("Arbor Call 2", DOL.ArborCall2.ActionName()),
                KeyValuePair.Create("Truth of Forests", DOL.TruthOfForests.ActionName()),
                #endregion

                #region FSH
                KeyValuePair.Create("Fish Eyes", DOL.FishEyes.ActionName()),
                KeyValuePair.Create("Surface Slap", DOL.SurfaceSlap.ActionName()),
                KeyValuePair.Create("Cast Light", DOL.CastLight.ActionName()),
                KeyValuePair.Create("Mooch II", DOL.MoochII.ActionName()),
                KeyValuePair.Create("Mooch", DOL.Mooch.ActionName()),
                KeyValuePair.Create("Snagging", DOL.Snagging.ActionName()),
                KeyValuePair.Create("Cast", DOL.Cast.ActionName()),
                KeyValuePair.Create("Hook", DOL.Hook.ActionName()),
                KeyValuePair.Create("Chum", DOL.Chum.ActionName()),
                #endregion

                #region FSH Diving
                KeyValuePair.Create("Shark Eye II", DOL.SharkEyeII.ActionName()),
                KeyValuePair.Create("Shark Eye", DOL.SharkEye.ActionName()),
                KeyValuePair.Create("Electric Current", DOL.ElectricCurrent.ActionName()),
                KeyValuePair.Create("Veteran Trade", DOL.VeteranTrade.ActionName()),
                KeyValuePair.Create("Nature's Bounty", DOL.NaturesBounty.ActionName()),
                KeyValuePair.Create("Salvage", DOL.Salvage.ActionName()),
                KeyValuePair.Create("Prize Catch", DOL.PrizeCatch.ActionName()),
                KeyValuePair.Create("Vital Sight", DOL.VitalSight.ActionName()),
                KeyValuePair.Create("Baited Breath", DOL.BaitedBreath.ActionName()),
                KeyValuePair.Create("Gig", DOL.Gig.ActionName()),
                #endregion

                #region Buffs
                KeyValuePair.Create("Eureka Moment", DOL.Buffs.EurekaMoment.StatusName()),
                KeyValuePair.Create("Triangulate", DOL.Buffs.Triangulate.StatusName()),
                #endregion
            ];
        }
    }
}
