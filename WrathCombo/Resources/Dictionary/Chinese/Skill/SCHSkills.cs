using System;
using System.Collections.Generic;
using WrathCombo.Combos.PvE;
using WrathCombo.Combos.PvP;
using WrathCombo.Extensions;

namespace WrathCombo.Resources.Dictionary.Chinese.Description
{
    public static class SCHSkills
    {
        public static IEnumerable<KeyValuePair<string, string>> GetSkills()
        {
            return
            [
                // Generated by the String Extraction and Translation Tool  
                // Model: DeepSeek v3  
                // Temperature: 0.1  
                // Generation Time: 2025-03-13 18:45:21  
                #region SCH
                // Healing
                KeyValuePair.Create("Physick", SCH.Physick.ActionName()),
                KeyValuePair.Create("Adloquium", SCH.Adloquium.ActionName()),
                KeyValuePair.Create("Succor", SCH.Succor.ActionName()),
                KeyValuePair.Create("Lustrate", SCH.Lustrate.ActionName()),
                KeyValuePair.Create("Sacred Soil", SCH.SacredSoil.ActionName()),
                KeyValuePair.Create("Indomitability", SCH.Indomitability.ActionName()),
                KeyValuePair.Create("Excogitation", SCH.Excogitation.ActionName()),
                KeyValuePair.Create("Consolation", SCH.Consolation.ActionName()),
                KeyValuePair.Create("Protraction", SCH.Protraction.ActionName()),
                KeyValuePair.Create("Seraphism", SCH.Seraphism.ActionName()),

                // Offense
                KeyValuePair.Create("Biolysis", SCH.Biolysis.ActionName()),
                KeyValuePair.Create("Broil IV", SCH.Broil4.ActionName()),
                KeyValuePair.Create("Broil III", SCH.Broil3.ActionName()),
                KeyValuePair.Create("Bio II", SCH.Bio2.ActionName()),
                KeyValuePair.Create("Bio", SCH.Bio.ActionName()),
                KeyValuePair.Create("Broil II", SCH.Broil2.ActionName()),
                KeyValuePair.Create("Broil", SCH.Broil.ActionName()),
                KeyValuePair.Create("Art of War II", SCH.ArtOfWarII.ActionName()),
                KeyValuePair.Create("Art of War", SCH.ArtOfWar.ActionName()),
                KeyValuePair.Create("Baneful Impaction", SCH.BanefulImpaction.ActionName()),
                KeyValuePair.Create("Baneful Impact", SCH.BanefulImpaction.ActionName()),

                // Faerie
                KeyValuePair.Create("Summon Seraph", SCH.SummonSeraph.ActionName()),
                KeyValuePair.Create("Summon Eos", SCH.SummonEos.ActionName()),
                KeyValuePair.Create("Whispering Dawn", SCH.WhisperingDawn.ActionName()),
                KeyValuePair.Create("Fey Illumination", SCH.FeyIllumination.ActionName()),
                KeyValuePair.Create("Dissipation", SCH.Dissipation.ActionName()),
                KeyValuePair.Create("Disspation", SCH.Dissipation.ActionName()),
                KeyValuePair.Create("Aetherpact", SCH.Aetherpact.ActionName()),
                KeyValuePair.Create("Dissolve Union", SCH.DissolveUnion.ActionName()),
                KeyValuePair.Create("Fey Blessing", SCH.FeyBlessing.ActionName()),

                // Other
                KeyValuePair.Create("Aetherflow", SCH.Aetherflow.ActionName()),
                KeyValuePair.Create("Recitation", SCH.Recitation.ActionName()),
                KeyValuePair.Create("Chain Stratagem", SCH.ChainStratagem.ActionName()),
                KeyValuePair.Create("Deployment Tactics", SCH.DeploymentTactics.ActionName()),
                KeyValuePair.Create("Emergency Tactics", SCH.EmergencyTactics.ActionName()),

                // Buffs
                KeyValuePair.Create("Galvanize", SCH.Buffs.Galvanize.StatusName()),

                // PvP
                KeyValuePair.Create("Expedient", SCHPvP.Expedient.ActionName()),
                #endregion
            ];
        }
    }
}
