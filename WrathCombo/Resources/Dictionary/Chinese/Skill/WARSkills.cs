using System;
using System.Collections.Generic;
using WrathCombo.Combos.PvE;
using WrathCombo.Combos.PvP;
using WrathCombo.Extensions;

namespace WrathCombo.Resources.Dictionary.Chinese.Description
{
    public static class WARSkills
    {
        public static IEnumerable<KeyValuePair<string, string>> GetSkills()
        {
            return
            [
                // Generated by the String Extraction and Translation Tool  
                // Model: DeepSeek v3  
                // Temperature: 0.1  
                // Generation Time: 2025-03-13 18:45:21  
                #region WARPvE
                // Offensive
                KeyValuePair.Create("Primal Rend", WAR.PrimalRend.ActionName()),
                KeyValuePair.Create("Heavy Swing", WAR.HeavySwing.ActionName()),
                KeyValuePair.Create("Maim", WAR.Maim.ActionName()),
                KeyValuePair.Create("Berserk", WAR.Berserk.ActionName()),
                KeyValuePair.Create("Overpower", WAR.Overpower.ActionName()),
                KeyValuePair.Create("Tomahawk", WAR.Tomahawk.ActionName()),
                KeyValuePair.Create("Storm's Path", WAR.StormsPath.ActionName()),
                KeyValuePair.Create("Inner Beast", WAR.InnerBeast.ActionName()),
                KeyValuePair.Create("Mythril Tempest", WAR.MythrilTempest.ActionName()),
                KeyValuePair.Create("Steel Cyclone", WAR.SteelCyclone.ActionName()),
                KeyValuePair.Create("Storm's Eye", WAR.StormsEye.ActionName()),
                KeyValuePair.Create("Storms Eye", WAR.StormsEye.ActionName()),
                KeyValuePair.Create("Infuriate", WAR.Infuriate.ActionName()),
                KeyValuePair.Create("Fell Cleave", WAR.FellCleave.ActionName()),
                KeyValuePair.Create("Decimate", WAR.Decimate.ActionName()),
                KeyValuePair.Create("Onslaught", WAR.Onslaught.ActionName()),
                KeyValuePair.Create("Upheaval", WAR.Upheaval.ActionName()),
                KeyValuePair.Create("Inner Release", WAR.InnerRelease.ActionName()),
                KeyValuePair.Create("Chaotic Cyclone", WAR.ChaoticCyclone.ActionName()),
                KeyValuePair.Create("Inner Chaos", WAR.InnerChaos.ActionName()),
                KeyValuePair.Create("Orogeny", WAR.Orogeny.ActionName()),
                KeyValuePair.Create("Primal Wrath", WAR.PrimalWrath.ActionName()),

                // Defensive
                KeyValuePair.Create("Defiance", WAR.Defiance.ActionName()),
                KeyValuePair.Create("Release Defiance", WAR.ReleaseDefiance.ActionName()),
                KeyValuePair.Create("Thrill of Battle", WAR.ThrillOfBattle.ActionName()),
                KeyValuePair.Create("Thrill Of Battle", WAR.ThrillOfBattle.ActionName()),
                KeyValuePair.Create("Vengeance", WAR.Vengeance.ActionName()),
                KeyValuePair.Create("Holmgang", WAR.Holmgang.ActionName()),
                KeyValuePair.Create("Raw Intuition", WAR.RawIntuition.ActionName()),
                KeyValuePair.Create("Equilibrium", WAR.Equilibrium.ActionName()),
                KeyValuePair.Create("Shake It Off", WAR.ShakeItOff.ActionName()),
                KeyValuePair.Create("Nascent Flash", WAR.NascentFlash.ActionName()),
                KeyValuePair.Create("Bloodwhetting", WAR.Bloodwhetting.ActionName()),
                KeyValuePair.Create("Damnation", WAR.Damnation.ActionName()),
                #endregion

                #region WARPvP
                KeyValuePair.Create("Blota", WARPvP.Blota.ActionName()),
                KeyValuePair.Create("Primal Scream", WARPvP.PrimalScream.ActionName()),
                KeyValuePair.Create("PrimalScream", WARPvP.PrimalScream.ActionName()),
                #endregion
            ];
        }
    }
}
